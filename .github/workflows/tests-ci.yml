name: CI - Unit and Integration Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions: read-all

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-tests:
    name: Unit tests (.NET 7)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 7 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build --no-restore --configuration Release

      - name: Run unit tests (exclude Integration category)
        run: >-
          dotnet test GameOfLifeApi.Tests/GameOfLifeApi.Tests.csproj
          --no-build --configuration Release -v minimal
          --logger "trx;LogFileName=unit.trx"
          --collect:"XPlat Code Coverage"
          --filter "Category!=Integration"

      - name: Upload unit test results and coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-artifacts
          path: |
            **/TestResults/*.trx
            **/TestResults/**/coverage.cobertura.xml

      - name: Publish Unit Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: '**/TestResults/*.trx'
          check_name: 'Unit Test Results'

  integration-tests:
    name: Integration tests (.NET 7)
    runs-on: ubuntu-latest
    needs: unit-tests
    permissions:
      contents: read
      checks: write
      pull-requests: write
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 7 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build --no-restore --configuration Release

      - name: Run integration tests (Category=Integration)
        run: >-
          dotnet test GameOfLifeApi.Tests/GameOfLifeApi.Tests.csproj
          --no-build --configuration Release -v minimal
          --logger "trx;LogFileName=integration.trx"
          --collect:"XPlat Code Coverage"
          --filter "Category=Integration"

      - name: Upload integration test results and coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-artifacts
          path: |
            **/TestResults/*.trx
            **/TestResults/**/coverage.cobertura.xml

      - name: Publish Integration Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: '**/TestResults/*.trx'
          check_name: 'Integration Test Results'

  coverage-report:
    name: Coverage report summary
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Download unit test artifacts
        uses: actions/download-artifact@v4
        with:
          name: unit-test-artifacts
          path: unit-artifacts

      - name: Download integration test artifacts
        uses: actions/download-artifact@v4
        with:
          name: integration-test-artifacts
          path: integration-artifacts

      - name: Generate combined coverage (Cobertura)
        uses: danielpalme/ReportGenerator-GitHub-Action@5.2.4
        with:
          reports: '**/coverage.cobertura.xml'
          targetdir: '${{ github.workspace }}'
          reporttypes: 'Cobertura'

      - name: Upload combined coverage XML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-combined
          path: '${{ github.workspace }}/Cobertura.xml'

      - name: Create coverage summary
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: 'Cobertura.xml'
          badge: true
          fail_below_min: true
          format: 'markdown'
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: 'both'
          thresholds: '80 90'

      - name: Post coverage PR comment
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: 'code-coverage-results.md'
